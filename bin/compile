#!/bin/bash

indent() {
  sed -u 's/^/       /'
}

echo "-----> Install ImageMagick"

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
VENDOR_DIR="$BUILD_DIR/vendor"
INSTALL_DIR="$VENDOR_DIR/imagemagick"

CONFIG_DIR=/etc/ImageMagick-7

# return latest ImageMagick 6.x version, or use argument to get an earlier version (1 is latest, 2 is one-but-latest, etc.)
detect_im_version() {
  wget -q -O - https://www.imagemagick.org/download/releases/ | sed 's/^.*href="ImageMagick-\(7\.[^"]\+\)\.tar\.gz".*/\1/p;d' | tail -n "${1:-1}" | head -n 1
}

# get version from environment (Heroku-style)
env_im_version() {
  VAR_FILE="${ENV_DIR}/IMAGE_MAGICK_VERSION"
  [ -e "$VAR_FILE" ] && cat "${VAR_FILE}"
}

IMAGE_MAGICK_VERSION=`env_im_version`
# Use provided ImageMagick version, or find latest 6.x on download page
if [ ! "$IMAGE_MAGICK_VERSION" ]; then
  IMAGE_MAGICK_VERSION=`detect_im_version`
fi
if [ ! "$IMAGE_MAGICK_VERSION" ]; then
  echo "ERROR: could not detect ImageMagick 6 version" 1>&2
  exit 1
fi

CACHE_FILE="$CACHE_DIR/imagemagick-$IMAGE_MAGICK_VERSION.tar.gz"

if [ ! -f $CACHE_FILE ]; then
  # install imagemagick
  IMAGE_MAGICK_FILE="ImageMagick-$IMAGE_MAGICK_VERSION.tar.xz"
  IMAGE_MAGICK_DIR="ImageMagick-$IMAGE_MAGICK_VERSION"
  IMAGE_MAGICK_URL="https://www.imagemagick.org/download/releases/$IMAGE_MAGICK_FILE"

  echo "-----> Downloading ImageMagick from $IMAGE_MAGICK_URL"
  wget $IMAGE_MAGICK_URL -P $BUILD_DIR | indent

  echo "-----> Extracting ImageMagick from $BUILD_DIR/$IMAGE_MAGICK_FILE"
  if [ ! -f $BUILD_DIR/$IMAGE_MAGICK_FILE ]; then
    echo "Error: Unable to download ImageMagick" | indent
    ls $BUILD_DIR | indent
    exit 1;
  fi
  tar xvf $BUILD_DIR/$IMAGE_MAGICK_FILE | indent

  echo "-----> Building ImageMagick"
  cd $IMAGE_MAGICK_DIR
  export CPPFLAGS="-I$INSTALL_DIR/include"
  export LDFLAGS="-L$INSTALL_DIR/lib"
  ./configure --prefix=$INSTALL_DIR --without-gvc --disable-docs
  make && make install
  cd ..
  rm -rf $IMAGE_MAGICK_DIR

  # cache for future deploys
  echo "-----> Caching ImageMagick installation"
  cd $VENDOR_DIR
  REL_INSTALL_DIR="imagemagick"
  tar czf $REL_INSTALL_DIR.tar.gz $REL_INSTALL_DIR

  if [ ! -d $CACHE_DIR ]; then
    mkdir -p $CACHE_DIR
  fi

  mv $REL_INSTALL_DIR.tar.gz $CACHE_FILE

else
  # cache exists, extract it
  echo "-----> Extracting ImageMagick $CACHE_FILE => $VENDOR_DIR"
  mkdir -p $VENDOR_DIR
  tar xzf $CACHE_FILE -C $VENDOR_DIR
fi

echo "-----> Writing policy file (StS)"
# use Heroku-provided policy as default, but increase RAM & disk cache size
cat $CONFIG_DIR/policy.xml |
  sed 's/policy domain="resource" name="disk" value="[^"]*"/policy domain="resource" name="disk" value="10GiB"/' |
  sed 's/policy domain="resource" name="map" value="[^"]*"/policy domain="resource" name="map" value="4GiB"/' |
  sed 's/policy domain="resource" name="memory" value="[^"]*"/policy domain="resource" name="memory" value="6GiB"/' \
  > $INSTALL_DIR$CONFIG_DIR/policy.xml

echo "-----> Writing config file"
cat > $INSTALL_DIR$CONFIG_DIR/magic.xml <<EOF
<magicmap>
  <magic name="GIF" offset="0" target="GIF8"/>
  <magic name="JPEG" offset="0" target="\377\330\377"/>
  <magic name="PNG" offset="0" target="\211PNG\r\n\032\n"/>
  <magic name="TIFF" offset="0" target="\115\115\000\052"/>
</magicmap>
EOF

# update PATH and LD_LIBRARY_PATH
echo "-----> Updating environment variables"
PROFILE_PATH="$BUILD_DIR/.profile.d/imagemagick.sh"
ACTUAL_INSTALL_PATH="$HOME/vendor/imagemagick"
mkdir -p $(dirname $PROFILE_PATH)
cat > $PROFILE_PATH <<EOF
export PATH=$ACTUAL_INSTALL_PATH/bin:\$PATH
export LD_LIBRARY_PATH=$ACTUAL_INSTALL_PATH/lib:\$LD_LIBRARY_PATH:/usr/local/lib
export MAGICK_CONFIGURE_PATH=$HOME/.magick:$ACTUAL_INSTALL_PATH$CONFIG_DIR
EOF
echo "-----> Done updating environment variables. All set for ImageMagick."
